<?php

function work_schedule2_menu() {
  $items['schedule/day'] = array(
    'title' => 'Schedule - Day',
    'page callback' => 'work_schedule2_day',
    'access callback' => TRUE,
  );
  $items['schedule/day/%'] = array(
    'title' => 'Schedule - Day',
    'page callback' => 'work_schedule2_day',
    'page arguments' => array(2),
    'access callback' => TRUE,
  );
  $items['schedule/week'] = array(
    'title' => 'Schedule - Week',
    'page callback' => 'work_schedule2_week',
    'access callback' => TRUE,
  );
  $items['schedule/week/%'] = array(
    'title' => 'Schedule - Week',
    'page callback' => 'work_schedule2_week',
    'page arguments' => array(2),
    'access callback' => TRUE,
  );
  $items['schedule/month'] = array(
    'title' => 'Schedule - Month',
    'page callback' => 'work_schedule2_month',
    'access callback' => TRUE,
  );
  $items['schedule/month/%'] = array(
    'title' => 'Schedule - Month',
    'page callback' => 'work_schedule2_month',
    'page arguments' => array(2),
    'access callback' => TRUE,
  );
return $items;
}

function work_schedule2_theme($existing, $type, $theme, $path) {
  $theme = array();
  $theme['schedule_day'] = array(
    'template' => 'schedule_day',
    'path' => drupal_get_path('module', 'work_schedule2')."/templates",
    'variables' => array('table' => null),
   );
  $theme['schedule_week'] = array(
    'template' => 'schedule_week',
    'path' => drupal_get_path('module', 'work_schedule2')."/templates",
    'variables' => array('table' => null),
   );
  $theme['schedule_month'] = array(
    'template' => 'schedule_month',
    'variables' => array('tasks' => null),
    'path' => drupal_get_path('module', 'work_schedule2')."/templates",
   );
  $theme['schedule_menu'] = array(
    'template' => 'schedule_menu',
    'path' => drupal_get_path('module', 'work_schedule2')."/templates",
   );

  return $theme;
}

function work_schedule2_day($date = null) {
  return theme('schedule_day',
    array('table' => work_schedule2_get_table('day', $date)));
}

function work_schedule2_week($date = null) {
  return theme('schedule_week',
    array('table' => work_schedule2_get_table('week', $date)));
}

function work_schedule2_month($date = null) {
  return theme('schedule_month',
    array('tasks' => work_schedule2_get_table('month', $date)));
}


function work_schedule2_get_table($sort_by, $date = null) {
  $date = isset($date) ? $date : date("Y-m-d");
  $sorted = sort_tables(work_schedule2_query_database(), $sort_by, $date);
  $f = "build_tables_" . $sort_by;
  return $f($sorted, $date);

}



function work_schedule2_query_database() {
  global $user;
  
  // First get all the projects this user is involved.
  $projects = db_query("
    SELECT entity_id AS project_nid FROM {field_data_field_users} WHERE field_users_uid = :uid",
    array(":uid" => $user->uid));
  
  $all_data = [];
  foreach ($projects as $p) {
    $data = db_query( "
    SELECT
      st.field_schedule_time_value,
      fd.field_date_value,
      u.name,
      n.title,
      n.nid,
      np.title AS np_title,
      np.nid AS np_nid,
      at.field_assigned_to_uid AS assigned_to
    FROM {node} AS n
    INNER JOIN {field_data_field_schedule} AS s ON n.nid = s.entity_id
    INNER JOIN {field_data_field_schedule_time} AS st ON st.entity_id = s.field_schedule_value
    INNER JOIN {field_data_field_date} AS fd ON fd.entity_id = st.entity_id
    INNER JOIN {field_data_field_user} AS fu ON fu.entity_id = st.entity_id
    INNER JOIN {users} AS u ON u.uid = fu.field_user_uid
    INNER JOIN {field_data_field_project} AS fp ON n.nid = fp.entity_id
    INNER JOIN {node} as np ON np.nid = fp.field_project_nid
    INNER JOIN {field_data_field_assigned_to} AS at ON at.entity_id = n.nid
    WHERE  n.type = 'task'
    AND n.status = 1
    AND np.nid = :nid",
    array(":nid" => $p->project_nid))->fetchAll();
    $all_data = array_merge($all_data, $data);
  }
  
  
  
  return $all_data;

}

function sort_tables($data, $sort_by, $date) {

  $tables = $sort_by == "month" ? array() : array('AM'=> null, 'PM'=>null, 'PM+'=>null);
  $date = date("Y-m-d", strtotime($date));
  $day = date('w', strtotime($date));
  $day_month = date('m', strtotime($date));
  $start_date = date('Y-m-d', strtotime('-' .$day. ' days', strtotime($date)));
  $end_date = date('Y-m-d', strtotime('+'.(6 - $day).' days', strtotime($date)));
  $start_month = date('Y-m-d', strtotime('first day of this month', strtotime($date)));
  $end_month = date('Y-m-d', strtotime('last day of this month', strtotime($date)));
  foreach($data as $d) {
    $time = $d->field_schedule_time_value;
    if($sort_by == 'day') {
      if($date == date("Y-m-d", strtotime($d->field_date_value))) {
        $tables[$time][] = array(
          'project_nid' => $d->np_nid,
          'project_title' => $d->np_title,
          'task_nid' => $d->nid,
          'task_title' =>$d->title,
          'assignee' => $d->name);
      }
    } elseif ($sort_by == 'week') { 
      if(date("Y-m-d", strtotime($d->field_date_value)) >= $start_date &&
         date("Y-m-d", strtotime($d->field_date_value)) <= $end_date) {
        $tables[$time][date("Y-m-d", strtotime($d->field_date_value))][]
          = array(
            'project_nid' => $d->np_nid,
            'project_title' => $d->np_title,
            'task_nid' => $d->nid,
            'task_title' =>$d->title,
            'assignee' => $d->name);
      }
    } elseif ($sort_by == 'month') {
      if(date("Y-m-d", strtotime($d->field_date_value)) >= $start_month &&
         date("Y-m-d", strtotime($d->field_date_value)) <= $end_month) {
        $tables[] = $d;
      }
    }
  }
  
  if ($sort_by == 'day') {
    ksort($tables);
  }
  if ($sort_by == 'week') {
    $temp = [];
    foreach($tables as $k => $t) {
      if ($t != NULL) {
        ksort($t);
      }
      $temp[$k] = $t;
    }
    $tables = $temp;
  }
  return $tables;
}

function pprint_r ($a) {
  print "<pre>";
  print_r($a);
  print "</pre>";
}


function objectToArray ($object) {
    if(!is_object($object) && !is_array($object))
        return $object;
    return array_map('objectToArray', (array) $object);
}

function build_tables_day($data, $date) {
  
  $header = array('Project', 'Task', 'Assignee');
  foreach ($data as $key => $val) {
    $rows = null;
    $time = $key;
    if($time == 'PM+'){
      $time = 'Evening';
    }
    $table[] = "<h1> $time </h1>";
    if(isset($val)) {
      foreach($val as $v) {
        $rows[] = array(
          l($v['project_title'], drupal_get_path_alias("node/".$v['project_nid'])),
          l("#".$v['task_nid'] ." " .$v['task_title'], drupal_get_path_alias("node/".$v['task_nid'])),
          $v['assignee'],
          );
      }
    } else {
      $rows[] = array('', '');
    }
    $table[] = theme('table', array('header'=> $header, 'rows' => $rows));
  }
  $temp = array($date, $table);
  return $temp;
}

function build_tables_week($data, $date) {
  global $user;
  $dates = null;
  $table = null;
  $data_organized = array();
  $day = date('w', strtotime($date));
  $start_date = date('Y-m-d', strtotime('-' .$day. ' days', strtotime($date)));
  $dates[] = $start_date;
  for ($i = 0; $i < 6; $i++) {
    $start_date = date('Y-m-d', strtotime('+ 1 days', strtotime($start_date)));
    $dates[] = $start_date;
  }
  $header = array('Hours');
  $weekdays = array ('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');
  $counter = 0;
  foreach ($dates as $d) {
    $header[] = l($weekdays[$counter++], "schedule/day/".$d);
  }

  foreach($data as $h=>$d) {
    foreach($dates as $days) {
      $data_organized[$h][$days] = isset($d[$days]) ? $d[$days] : array();
    }
  }
  $hours_rows = null;
  
  foreach ($data_organized as $hours => $date_tasks) {
    $time = $hours == "PM+" ? "Evening" : $hours;
    $infos = array($time);
    // Now dealing with each table cell
    foreach ($date_tasks as $tasks) {
      $tasks_organized = work_schedule2_organized_week_tasks($tasks);
      $info = "";
      foreach ($tasks_organized as $project_nid => $cell_content) {
        $info .= "<div class='weekly-schedule-project-item'><strong>" .
          l($cell_content['project_title'], drupal_get_path_alias("node/".$project_nid)) .
          "</strong><ul>";
          
        foreach($cell_content['tasks'] as $task) {
          $info .= "<li ";
          if ($task['assignee'] != $user->name){
            $info .=" class='not-assigned-to-me'";
          }
          $info .=">" .
            l("#".$task['task_nid'] ." " .
            $task['task_title'], drupal_get_path_alias("node/".$task['task_nid'])) .
            " (".$task['assignee'].")</li>";
        }
        $info .="</ul></div>";
      }
      $infos[] = $info;
    }
    $hours_rows[] = $infos;
  }
  $table[] = theme('table', array('header'=> $header, 'rows' => $hours_rows));
  $temp = array($date, $table);
  return $temp;
}

function work_schedule2_organized_week_tasks ($tasks) {
  $result = [];
  foreach ($tasks as $task){
    if (isset($result[$task['project_nid']])) {
      $result[$task['project_nid']]['tasks'][] = $task;
    }
    else {
      $result[$task['project_nid']] = array(
        'project_title' => $task['project_title'],
        'tasks' => array($task),
      );
    }
  }
  return $result;
}

function build_tables_month($data, $date) {
  $rows = array();
  $start_date = date('Y-m-d', strtotime('first day of this month', strtotime($date)));
  $end_date = date('Y-m-d', strtotime('last day of this month', strtotime($start_date)));
  foreach($data as $d) {
    if($d->field_date_value >= $start_date && $d->field_date_value <= $end_date) {
      $rows[] = $d;
    }
  }
  $temp = array($start_date, $rows);
  return $temp;
}
