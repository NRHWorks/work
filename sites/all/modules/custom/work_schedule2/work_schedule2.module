<?php

function work_schedule2_menu() {
	$items['schedule/day'] = array(
    'title' => 'Schedule - Day',
    'page callback' => 'work_schedule2',
    'access callback' => TRUE,
  );
	$items['schedule/month'] = array(
    'title' => 'Schedule - Month',
    'page callback' => 'work_schedule2_month',
    'access callback' => TRUE,
  );
return $items;
}

function work_schedule2_theme($existing, $type, $theme, $path) {
  $theme = array();
  $theme['schedule_day'] = array(
    'template' => 'schedule_day',
    'path' => drupal_get_path('module', 'work_schedule2'),
    'variables' => array('table' => null),
   );
  $theme['schedule_month'] = array(
    'template' => 'schedule_month',
    'variables' => array('tasks' => null),
    'path' => drupal_get_path('module', 'work_schedule2_month'),
   );

  return $theme;
}

function work_schedule2() {
	$sort_by = 'month';
	$params = drupal_get_query_parameters();
	$data = work_schedule2_query_database();
	$date = $_SERVER['QUERY_STRING'];
	if($date) {
		$date = rawurldecode(substr($date, 5));
	} elseif (isset($params["date"]) && $params["date"] != '') {
    	$date = date('Y-m-d',strtotime($params["date"]));
  	} else {
    	$date = date("Y-m-d");
  	}
	$sorted = sort_tables($data, $sort_by, $date);
	$table = build_tables($sorted, $date, $sort_by);
	return theme('schedule_day', array('table' => $table));
}

function work_schedule2_month() {
	$sort_by = 'month';
	$params = drupal_get_query_parameters();
	$data = work_schedule2_query_database();
	$date = $_SERVER['QUERY_STRING'];
	if($date) {
		$date = rawurldecode(substr($date, 5));
	} elseif (isset($params["date"]) && $params["date"] != '') {
    	$date = date('Y-m-d',strtotime($params["date"]));
  	} else {
    	$date = date("Y-m-d");
  	}
	$table = build_tables_month($data, $date);
	return theme('schedule_month', array('table' => $table));
}

function work_schedule2_query_database() {
	$query = db_select('node', 'n');
	$query->addField('st', 'field_schedule_time_value');
	$query->addField('fd', 'field_date_value');
	$query->addField('u', 'name');
	$query->addField('n', 'title');
	$query->addField('np', 'title');
	$query->join('field_data_field_schedule', 's', 'n.nid = s.entity_id');
	$query->join('field_data_field_schedule_time', 'st', 'st.entity_id = s.field_schedule_value');
	$query->join('field_data_field_date', 'fd', 'fd.entity_id = st.entity_id');
	$query->join('field_data_field_user', 'fu', 'fu.entity_id = st.entity_id');
	$query->join('users', 'u', 'u.uid = fu.field_user_uid');
	$query->join('field_data_field_project', 'fp', 'n.nid = fp.entity_id');
	$query->join('node', 'np', 'np.nid = fp.field_project_nid');
	$query->condition('n.type', 'task', '=');
	$query->condition('n.status', '1', '=');
	$data = $query->execute();
	return $data;
}

function sort_tables($data, $sort_by, $date) {
	$tables = array('AM'=> null, 'PM'=>null, 'PM+'=>null);
	$date = date("Y-m-d", strtotime($date));
	$day = date('w', strtotime($date));
	$day_month = date('m', strtotime($date));
	$start_date = date('Y-m-d', strtotime('-' .$day. ' days', strtotime($date)));
	$end_date = date('Y-m-d', strtotime('+'.(6 - $day).' days', strtotime($date)));
	$start_month = date('Y-m-d', strtotime('first day of this month', strtotime($date)));
	$end_month = date('Y-m-d', strtotime('last day of this month', strtotime($date)));
	foreach($data as $d) {
		$time = $d->field_schedule_time_value;
		if($sort_by == 'day') {
			if($date == date("Y-m-d", strtotime($d->field_date_value))) {
				$tables[$time][$d->np_title][$d->name] = $d->title;
			}
		} elseif ($sort_by == 'week') {	
			if(date("Y-m-d", strtotime($d->field_date_value)) >= $start_date && date("Y-m-d", strtotime($d->field_date_value)) <= $end_date) {
				$tables[$time][date("Y-m-d", strtotime($d->field_date_value))][$d->name] = $d->title;
			}
		} elseif ($sort_by == 'month') {
			if(date("Y-m-d", strtotime($d->field_date_value)) >= $start_month && date("Y-m-d", strtotime($d->field_date_value)) <= $end_month) {
				$tables[] = $d;
			}

		}
 	}
	ksort($tables);
	return $tables;
}

function objectToArray ($object) {
    if(!is_object($object) && !is_array($object))
        return $object;
    return array_map('objectToArray', (array) $object);
}
function build_tables($data, $date, $sort_by) {
	$tables = array();
	if($sort_by == 'day') {
		$tables = build_tables_day($data, $date);
	} elseif ($sort_by == 'week') {
		$tables = build_tables_week($data, $date);
	} elseif($sort_by == 'month') {
		$tables = build_tables_month($data, $date);
	}
	return $tables;

}

function build_tables_day($data, $date) {
	$table[] = '<h1><a href="day?date=' . date('Y-m-d',strtotime($date . '-1 days')) . '"><<</a> ' . date('l, M j, Y', strtotime($date)) . ' <a href="day?date=' . date('Y-m-d',strtotime($date . '+1 days')) . '">>></a></h1>';
	$header = array('Project', 'User', 'Task');
	foreach ($data as $key => $val) {
		$rows = null;
		$time = $key;
		if($time == 'PM+'){
			$time = 'Evening';
		}
		$table[] = "<h1> $time </h1>";
		if(isset($val)) {
			foreach($val as $k => $v) {
				foreach($v as $l => $m) {
					$rows[] = array($k, $l, $m);
				}
			}
		} else {
			$rows[] = array('', '', '');
		}
		$table[] = theme('table', array('header'=> $header, 'rows' => $rows));
	}
	return $table;
}

function build_tables_week($data, $date) {
	$dates = null;
	$table = null;
	$data_organized = array();
	$day = date('w', strtotime($date));
	$start_date = date('Y-m-d', strtotime('-' .$day. ' days', strtotime($date)));
	$end_date = date('Y-m-d', strtotime('+ 6 days', strtotime($start_date)));
	$dates[] = $start_date;
	$table[] = '<h1><a href="day?date=' . date('Y-m-d',strtotime($start_date . '-7 days')) . '"><<</a> Week of: ' . date('l, M j, Y', strtotime($start_date)) . '  -  ' . date('l, M j, Y', strtotime($start_date . '+6 days')) .' <a href="day?date=' . date('Y-m-d',strtotime($end_date . ' + 1 days')) . '">>></a></h1>';
	for ($i = 0; $i < 6; $i++) {
		$start_date = date('Y-m-d', strtotime('+ 1 days', strtotime($start_date)));
		$dates[] = $start_date;
	}
	$header = array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');
	foreach($data as $h=>$d) {		
		foreach($dates as $days) {
			if(isset($d[$days])) {
				foreach($d as $key=>$val) {
					foreach($val as $k=>$v) {
						$data_organized[$h][$key][] = array($k, $v);
					}
				}
			} else {
				$data_organized[$h][$days][][] = '';
			}
		}
	}
	foreach ($data_organized as $a=>$b) {
		$time = $a;
		if ($time == 'PM+') {
			$time = 'Evening';
		}
		$rows = null;
		$infos = null;
		$table[] = "<h1> $time </h1>";
		foreach ($b as $c) {
			$info = null;
			$info = "<ul>";
			foreach ($c as $d) {
				if($d[0]) {
					$info .= "<li>";
					foreach ($d as $e) {
						$info .= "$e ";
					}
					$info .= "</li>";
				}
			}
			$info .= "</ul>";
			$infos[] = $info;
		}
		$rows[] = $infos;	
		$table[] = theme('table', array('header'=> $header, 'rows' => $rows));
	}	
	return $table;
}

function build_tables_month($data, $date) {
	$start_date = date('Y-m-d', strtotime('first day of this month', strtotime($date)));
	$end_date = date('Y-m-d', strtotime('last day of this month', strtotime($start_date)));
	foreach($data as $d) {
		print_r($d); exit;
		if($d->field_date_value >= $start_date && $d->field_date_value <= $end_date) {
			$rows[] = $d;
		}
	}
	print_r($rows); exit;
  
}