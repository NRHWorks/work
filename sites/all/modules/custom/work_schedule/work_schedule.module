<?php

function work_schedule_menu() {
  $items['schedule'] = array(
    'title' => 'Schedule - Week',
    'page callback' => 'work_schedule_week',
    'access callback' => TRUE,
  );

  $items['schedule/day'] = array(
    'title' => 'Schedule - Day',
    'page callback' => 'work_schedule_day',
    'access callback' => TRUE,
  );

  $items['schedule/month'] = array(
    'title' => 'Schedule - Month',
    'page callback' => 'work_schedule_month',
    'access callback' => TRUE,
  );

  return $items;
}

function work_schedule_theme($existing, $type, $theme, $path) {
  $theme = array();
  $theme['schedule_day'] = array(
    'template' => 'schedule-day',
    'variables' => array('tasks' => null),
    'path' => drupal_get_path('module', 'work_schedule') . '/templates',
   );

  $theme['schedule_week'] = array(
    'template' => 'schedule-week',
    'variables' => array('monday' => null, 'tasks' => null),
    'path' => drupal_get_path('module', 'work_schedule') . '/templates',
   );

  $theme['schedule_month'] = array(
    'template' => 'schedule-month',
    'variables' => array('tasks' => null),
    'path' => drupal_get_path('module', 'work_schedule') . '/templates',
   );
  
  $theme['schedule_menu'] = array(
    'template' => 'schedule-menu',
    'path' => drupal_get_path('module', 'work_schedule') . '/templates',
   );

  return $theme;
}

function work_schedule_day() {
  $clients = array();
  $tasks = array();  

  $start = date('Y-m-d 00:00:00');
    $end = date('Y-m-d 24:00:00');

  return theme('schedule_day', array('tasks' => work_schedule_tasks($start, $end)));
}

function work_schedule_week($week = null) {
  $nbDay = date('N', time());
  $monday = new DateTime();
  $sunday = new DateTime();

  $monday->modify('-'.($nbDay).' days');
  $sunday->modify('+'.(7-$nbDay).' days');

  return theme('schedule_week', array('monday' => $monday, 'tasks' => work_schedule_tasks($monday->format('Y-m-d 00:00:00'), $sunday->format('Y-m-d 24:00:00'))));
}

function work_schedule_month($month = null) {
  $start = date('Y-m-01 00:00:00');
  $end = date('Y-m-31 24:00:00');
  
  return theme('schedule_month', array('tasks' => work_schedule_tasks($start, $end)));
}

function work_schedule_tasks($start, $end) {
  global $user;

  $results = db_query("SELECT entity_id FROM {field_data_field_user} where field_user_uid = :uid", array(':uid' => $user->uid));
  $universe = array();
  foreach ($results as $r) {
    $universe[] = $r->entity_id;
  }
  
  $results = db_query("SELECT entity_id FROM {field_data_field_users} where field_users_uid = :uid", array(':uid' => $user->uid));
  foreach ($results as $r) {
    $universe[] = $r->entity_id;
  }
  
  $results = db_query("SELECT entity_id FROM {field_data_field_assigned_to} where field_assigned_to_uid = :uid", array(':uid' => $user->uid));
  foreach ($results as $r) {
    $universe[] = $r->entity_id;
  }

  // need to filter by status
  //$results = db_query("SELECT entity_id FROM {field_data_field_status} WHERE field_status_tid = 2 AND entity_id IN (:nids)", array(':nids' => $universe));
  $results = db_query("SELECT entity_id FROM {field_data_field_status} WHERE field_status_tid = 2", array(':nids' => $universe));

  $tasks = array();
  foreach ($results as $r) {
    $tasks[] = $r->entity_id;
  }
 
  //$results = db_query("SELECT entity_id, field_schedule_revision_id FROM {field_data_field_schedule} WHERE entity_id IN (:nids)", array(':nids' => $tasks));
  $results = db_query("SELECT entity_id, field_schedule_revision_id FROM {field_data_field_schedule} ", array(':nids' => $tasks));
  
  $schedule = array();   
  foreach ($results as $r) {
    $schedule[] = array('nid' => $r->entity_id, 'fcid' => $r->field_schedule_revision_id);
  }

  $data = array();
  foreach ($schedule as $s) {
    // need to lazy load these objects
    $task = node_load($s['nid']);
    $project = node_load($task->field_project['und'][0]['nid']);
    $client = node_load($project->field_client['und'][0]['nid']);

    $fc = entity_load('field_collection_item', array($s['fcid']));
    $fc = array_pop($fc);

    $t_user = user_load($fc->field_user['und'][0]['uid']);

    foreach ($fc->field_schedule_time['und'] as $t) {
      if(($fc->field_date['und'][0]['value'] >= $start) && ($fc->field_date['und'][0]['value'] <= $end)) {
        $data[$fc->field_date['und'][0]['value']][$t['value']][$client->title][$project->title][$task->title] = $t_user->name;
      }
    }
  }

  return $data; 
}

