<?php

function work_theme_init() {
  drupal_add_library('system', 'ui.datepicker');
  drupal_add_css(drupal_get_path('module', 'work_theme') . '/css/work_theme.css', array('group' => CSS_DEFAULT, 'every_page' => TRUE));
  drupal_add_css(drupal_get_path('module', 'work_theme') . '/css/fontello.css', array('group' => CSS_DEFAULT, 'every_page' => TRUE));
  drupal_add_js(drupal_get_path('module', 'work_theme') . '/js/scripts.js', array('type' => 'file'));
}

function work_theme_theme($existing, $type, $theme, $path) {
  $theme = array();
  
  $theme['node__task'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'node--task',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );

  $theme['node__client'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'node--client',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );

  $theme['node__project'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'node--project',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );
  
  $theme['node__browser_test'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'node--browser-test',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );

  $theme['node__payment'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'node--payment',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );

  $theme['node__invoice'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'node--invoice',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );

  $theme['node__invoice'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'node--invoice',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );
  
  $theme['field_collection_item__field_to_do'] = array(
    'render element' => 'content',
    'base hook' => 'field_collection',
    'template' => 'field-collection-item--field-to-do',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );
  
  $theme['field_collection_item__field_schedule'] = array(
    'render element' => 'content',
    'base hook' => 'field_collection',
    'template' => 'field-collection-item--field-schedule',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );
  
  $theme['field_collection_item__field_time'] = array(
    'render element' => 'content',
    'base hook' => 'field_collection',
    'template' => 'field-collection-item--field-time',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );
  
  $theme['field_collection_item__field_comments'] = array(
    'render element' => 'content',
    'base hook' => 'field_collection',
    'template' => 'field-collection-item--field-comments',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );
  
  $theme['field_collection_item__field_assets'] = array(
    'render element' => 'content',
    'base hook' => 'field_collection',
    'template' => 'field-collection-item--field-assets',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );


  $theme['field__field_status'] = array(
    'render element' => 'content',
    'base hook' => 'field',
    'template' => 'field--field-status',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );
  
  $theme['field__field_task_priority'] = array(
    'render element' => 'content',
    'base hook' => 'field',
    'template' => 'field--field-task-priority',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );
  
  
  $theme['field__field_users'] = array(
    'render element' => 'content',
    'base hook' => 'field',
    'template' => 'field--field-users',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );
  
  $theme['field__field_assigned_to'] = array(
    'render element' => 'content',
    'base hook' => 'field',
    'template' => 'field--field-assigned-to',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );

  $theme['field__field_estimate'] = array(
    'render element' => 'content',
    'base hook' => 'field',
    'template' => 'field--field-estimate',
    'path' => drupal_get_path('module', 'work_theme') . '/templates',
   );

  return $theme;
}

function work_theme_aasort (&$array, $key) {
    $sorter=array();
    $ret=array();
    reset($array);
    foreach ($array as $ii => $va) {
        $sorter[$ii]=$va[$key];
    }
    asort($sorter);
    foreach ($sorter as $ii => $va) {
        $ret[$ii]=$array[$ii];
    }
    $array=$ret;
}

function work_theme_sort($data, $key, $type = 'string') {
  $sorted = TRUE;

  foreach ($data as $k => $d) { 
    if (isset($data[$k+1])) {
      $sort_a = $data[$k][$key];
      $sort_b = $data[$k + 1][$key];

      if ($type == 'date') {
        $sort_a = strtotime($sort_a);
        $sort_b = strtotime($sort_b);
      }

      if ($sort_a > $sort_b) {
        $sorted = FALSE;
        $holder = $data[$k+1];

        $data[$k+1] = $data[$k];
        $data[$k] = $holder;
      }
    } 
  }

  if ($sorted == TRUE) {
    return $data;
  } else {
    return work_theme_sort($data, $key, $type);
  }
}

